

/*
 * CS 530 Assignment 4
 * Project - Schol-CITE
 * MainPage class
 */

/**
 *
 * @author diwakarsharma
 */
//imports
import java.sql.*;
import java.util.Vector;
import javax.swing.*;
public class MainPage extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;

    /**
     * Creates new form MainPage
     */
    public MainPage() {
        initComponents();
        conn=javaconnect.ConnecrDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScholCite = new javax.swing.JLabel();
        Textlbl2 = new javax.swing.JLabel();
        fname = new javax.swing.JLabel();
        lname = new javax.swing.JLabel();
        fnametxt = new javax.swing.JTextField();
        lnametxt = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        btnCitation = new javax.swing.JButton();
        btnGraph = new javax.swing.JButton();
        btnArticles = new javax.swing.JButton();
        btnSuggestion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        scholList = new javax.swing.JList();
        btn_Help = new javax.swing.JButton();
        btn_Clear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Schol-CITE");

        ScholCite.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        ScholCite.setText("        Schol-CITE");

        Textlbl2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        Textlbl2.setText("Search the Scholar....");

        fname.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        fname.setText("First Name");

        lname.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        lname.setText("Last Name");

        fnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnametxtActionPerformed(evt);
            }
        });

        btn_Search.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btn_Search.setText("Search");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        btnCitation.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btnCitation.setText("Citation by Index");
        btnCitation.setEnabled(false);
        btnCitation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCitationActionPerformed(evt);
            }
        });

        btnGraph.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btnGraph.setText("Citation by Graph");
        btnGraph.setEnabled(false);
        btnGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraphActionPerformed(evt);
            }
        });

        btnArticles.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btnArticles.setText("Articles");
        btnArticles.setEnabled(false);
        btnArticles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticlesActionPerformed(evt);
            }
        });

        btnSuggestion.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btnSuggestion.setText("Suggestion");
        btnSuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuggestionActionPerformed(evt);
            }
        });

        scholList.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        scholList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        scholList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                scholListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(scholList);

        btn_Help.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btn_Help.setText("Help");
        btn_Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HelpActionPerformed(evt);
            }
        });

        btn_Clear.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        btn_Clear.setText("Clear");
        btn_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(ScholCite, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(Textlbl2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnArticles, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSuggestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCitation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fname)
                                            .addComponent(lname))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(fnametxt, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                            .addComponent(lnametxt)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_Search)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_Help, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScholCite, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Textlbl2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fnametxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lnametxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Search)
                    .addComponent(btn_Clear)
                    .addComponent(btn_Help))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCitation)
                    .addComponent(btnGraph))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArticles)
                    .addComponent(btnSuggestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);

        setSize(new java.awt.Dimension(363, 463));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnametxtActionPerformed

    //controller for Search
    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
        //Adding data to Jlist on click of search button
         if (fnametxt.getText().equals("") && lnametxt.getText().equals("")){ 
             JOptionPane.showMessageDialog(null,"Please enter a name to search");
         }
         else {
         DefaultListModel m = new DefaultListModel();
         try{    
            String sql = "select * from citations where fname=? COLLATE NOCASE or lname=? COLLATE NOCASE ORDER BY fname";
            pst=conn.prepareStatement(sql);
            pst.setString(1,fnametxt.getText());
            pst.setString(2,lnametxt.getText());
            rs = pst.executeQuery();
            
            //if no record found
           if(!rs.isBeforeFirst()){
                 JOptionPane.showMessageDialog(null, "No Record found");
                }
           else {
            while(rs.next()){
            String fname = rs.getString("fname");
            String lname = rs.getString("lname");
            String name = fname +" "+ lname;
            m.addElement(name);
           }
           }
            scholList.setModel(m);
         rs.close();
         pst.close();
           
      
        }
         catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
      }
    }//GEN-LAST:event_btn_SearchActionPerformed

    //Listener for selected values in list
    private void scholListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_scholListValueChanged
        //enabling buttons
        btnGraph.setEnabled(true);
        btnCitation.setEnabled(true);
        btnSuggestion.setEnabled(true);
        btnArticles.setEnabled(true);      
    }//GEN-LAST:event_scholListValueChanged

    //control to open help form
    private void btn_HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HelpActionPerformed
         Help h = new Help();
        h.setVisible(true);
    }//GEN-LAST:event_btn_HelpActionPerformed

    //control to clear the form
    private void btn_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ClearActionPerformed
        if (fnametxt.getText().equals("") && lnametxt.getText().equals("")){ 
             JOptionPane.showMessageDialog(null,"Form is empty. Please insert to clear");
         }
        else {
        fnametxt.setText("");
        lnametxt.setText("");
        DefaultListModel model = (DefaultListModel) scholList.getModel();
        model.clear();
        //disabling buttons
        btnGraph.setEnabled(false);
        btnCitation.setEnabled(false);
        btnSuggestion.setEnabled(true);
        btnArticles.setEnabled(false);  
        }
    }//GEN-LAST:event_btn_ClearActionPerformed
    
    //controller to navigate to the Citations page
    private void btnCitationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCitationActionPerformed
        // function call to populate data from database
        Table tbl = new Table();
        tbl.setVisible(true);
    }//GEN-LAST:event_btnCitationActionPerformed

    //controller to navigate to the Articles form 
    private void btnArticlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticlesActionPerformed
        // TODO add your handling code here:
        
         DefaultListModel m = new DefaultListModel();
         try{    
             String sql = "select * from articles where fname=? COLLATE NOCASE or lname=? COLLATE NOCASE ORDER BY citedby DESC LIMIT 5";
             pst=conn.prepareStatement(sql);
             pst.setString(1,fnametxt.getText());
             pst.setString(2,lnametxt.getText());
             rs = pst.executeQuery();
             if(!rs.isBeforeFirst()){
                 JOptionPane.showMessageDialog(null, "No Record found");
                }
             else {
             int i=1;
             while(rs.next()){
             String art  = rs.getString("articles");
             String article = i++ + "." + " " + art;
             m.addElement(article);
                }
            rs.close();
            pst.close();
            MostSearched ms = new MostSearched();
            ms.setVisible(true);
            ms.SearchedList.setModel(m);
             }
             
    }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnArticlesActionPerformed

    //cotroller to navigate to Graph form
    private void btnGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraphActionPerformed
        Graph g = new Graph();
        g.setVisible(true);
        
    }//GEN-LAST:event_btnGraphActionPerformed

    //controller to navigate to suggestion form
    private void btnSuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuggestionActionPerformed
        // TODO add your handling code here:
        Suggestion s = new Suggestion();
        s.setVisible(true);
        
    }//GEN-LAST:event_btnSuggestionActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ScholCite;
    private javax.swing.JLabel Textlbl2;
    private javax.swing.JButton btnArticles;
    private javax.swing.JButton btnCitation;
    private javax.swing.JButton btnGraph;
    private javax.swing.JButton btnSuggestion;
    private javax.swing.JButton btn_Clear;
    private javax.swing.JButton btn_Help;
    private javax.swing.JButton btn_Search;
    private javax.swing.JLabel fname;
    public static javax.swing.JTextField fnametxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lname;
    public static javax.swing.JTextField lnametxt;
    public static javax.swing.JList scholList;
    // End of variables declaration//GEN-END:variables
    public static String scholName;

   

}
